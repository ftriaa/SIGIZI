# -*- coding: utf-8 -*-
"""Inference Model Stunting.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10L-yu9Bdft6q3dTsq8xtRaEc5uSNsSao
"""

!pip install onnxruntime ipywidgets

import onnxruntime as ort
import numpy as np

MODEL_PATH = "/content/drive/MyDrive/Laskar Ai/Prediksi Stunting/gbc_model.onnx"

category_mapping = {
    'Jenis kelamin': {'Laki-laki': 0, 'Perempuan': 1},
    'Apakah ibu dan anak melakukan pemeriksaan setelan 40 hari kelahiran?': {'Tidak': 0, 'Ya': 1},
    'Tingkat pendidikan kepala keluarga': {'Tingkat SD': 2, 'Tingkat SMP': 4, 'Pendidikan Tinggi': 0, 'Tingkat SMA': 3, 'Tidak sekolah': 1}
}

target_map = {
    0: "Normal",
    1: "Stunting"
}

session = ort.InferenceSession(MODEL_PATH)
input_name = session.get_inputs()[0].name

def preprocess_input(raw_inputs):
    # raw_inputs: dict, key = nama fitur, value = nilai asli (bisa string atau angka)
    # Output: list float, sudah di-mapping ke angka, urutan sesuai fitur model
    feature_order = [
        'Jenis kelamin', 'Usia anak (bulan)', 'Berat badan anak saat ini (kg)', 'Tinggi badan anak saat ini (cm)', 'Apakah ibu dan anak melakukan pemeriksaan setelan 40 hari kelahiran?',
        'Berat badan anak saat lahir (kg)', 'Usia anak pertama kali disapih (bulan)', 'Jumlah pemeriksaan yang dilakukan ibu saat hamil', 'Frekuensi anak makan ubi dalam 1 minggu', 'Frekuensi anak makan telur dalam 1 minggu',
        'Frekuensi anak makan ikan dalam 1 minggu', 'Frekuensi anak makan daging dalam 1 minggu', 'Frekuensi anak minum susu dalam 1 minggu', 'Frekuensi anak makan sayur dalam 1 minggu', 'Frekuensi anak makan pisang dalam 1 minggu',
        'Frekuensi anak makan pepaya dalam 1 minggu', 'Frekuensi anak makan wortel dalam 1 minggu', 'Frekuensi anak makan mangga dalam 1 minggu', 'Frekuensi anak makan mie dalam 1 minggu', 'Frekuensi anak makan fast food dalam 1 minggu',
        'Frekuensi anak minum soda dalam 1 minggu', 'Frekuensi anak makan sambal dalam 1 minggu', 'Frekuensi anak makan gorengan dalam 1 minggu', 'Frekuensi anak makan nasi dalam 1 minggu', 'Frekuensi anak makan makanan manis dalam 1 minggu',
        'Tingkat pendidikan kepala keluarga', 'Pendapatan keluarga perbulan (Rp)'
    ]

    inputs = []
    for f in feature_order:
        v = raw_inputs.get(f)
        if f in category_mapping:
            mapped_val = category_mapping[f].get(v)
            if mapped_val is None:
                raise ValueError(f"Nilai '{v}' tidak valid untuk fitur kategori '{f}'")
            inputs.append(float(mapped_val))
        else:
            # Asumsi angka, convert ke float
            inputs.append(float(v))
    return inputs

def predict(raw_inputs):
    # raw_inputs: dict, key = nama fitur, value = nilai asli (bisa string atau angka)
    # Return: tuple (predicted_label:str, probability:float)
    input_array = np.array([preprocess_input(raw_inputs)], dtype=np.float32)
    preds = session.run(None, {input_name: input_array})

    predicted_class = preds[0][0]
    predicted_prob = preds[1][0][1]  # asumsikan probs kedua kelas

    return target_map.get(predicted_class, "Unknown"), predicted_prob

if __name__ == "__main__":
    contoh_input = {
        'Jenis kelamin': 'Perempuan',
        'Usia anak (bulan)': 12,
        'Berat badan anak saat ini (kg)': 8.5,
        'Tinggi badan anak saat ini (cm)': 70,
        'Apakah ibu dan anak melakukan pemeriksaan setelan 40 hari kelahiran?': 'Ya',
        'Berat badan anak saat lahir (kg)': 3.2,
        'Usia anak pertama kali disapih (bulan)': 6,
        'Jumlah pemeriksaan yang dilakukan ibu saat hamil': 4,
        'Frekuensi anak makan ubi dalam 1 minggu': 2,
        'Frekuensi anak makan telur dalam 1 minggu': 3,
        'Frekuensi anak makan ikan dalam 1 minggu': 2,
        'Frekuensi anak makan daging dalam 1 minggu': 1,
        'Frekuensi anak minum susu dalam 1 minggu': 7,
        'Frekuensi anak makan sayur dalam 1 minggu': 5,
        'Frekuensi anak makan pisang dalam 1 minggu': 2,
        'Frekuensi anak makan pepaya dalam 1 minggu': 1,
        'Frekuensi anak makan wortel dalam 1 minggu': 3,
        'Frekuensi anak makan mangga dalam 1 minggu': 1,
        'Frekuensi anak makan mie dalam 1 minggu': 2,
        'Frekuensi anak makan fast food dalam 1 minggu': 0,
        'Frekuensi anak minum soda dalam 1 minggu': 0,
        'Frekuensi anak makan sambal dalam 1 minggu': 4,
        'Frekuensi anak makan gorengan dalam 1 minggu': 1,
        'Frekuensi anak makan nasi dalam 1 minggu': 7,
        'Frekuensi anak makan makanan manis dalam 1 minggu': 3,
        'Tingkat pendidikan kepala keluarga': 'Tingkat SMA',
        'Pendapatan keluarga perbulan (Rp)': 3500000
    }

    label, prob = predict(contoh_input)
    print(f"Prediksi: {label}, Peluang stunting: {prob:.4f}")